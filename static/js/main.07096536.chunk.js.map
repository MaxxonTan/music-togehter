{"version":3,"sources":["components/modal/Modal.module.scss","App.module.scss","components/Navbar/Navbar.module.scss","components/Player/Player.module.scss","components/Queue/Queue.module.scss","components/Queue/Song/Song.module.scss","components/Landing/SearchResults/SearchResults.module.scss","firebase/firebase.js","components/Player/Player.js","components/Queue/Song/Song.js","components/modal/Modal.js","components/Queue/Queue.js","components/Landing/SearchResults/SearchResults.js","components/Navbar/Navbar.js","App.js","index.js"],"names":["module","exports","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","databaseURL","db","database","Player","useContext","SongQueueContext","songQueue","setSongQueue","currentSongStatus","setCurrentSongStatus","videoPlayer","userInfo","setUserInfo","useState","seekerLength","setSeekerLength","volumeLength","setVolumeLength","currentTime","setCurrentTime","useEffect","interval","setInterval","undefined","current","getCurrentTime","getDuration","clearInterval","isInRoom","ref","roomId","on","snap","seekTo","val","secondsToMinutes","s","seekerStyle","backgroundSize","volumeStyle","className","styles","player","details","length","src","index","thumbnail","url","alt","name","title","controls","class","onClick","randomIndex","tempArray","currentIndex","Math","floor","random","isPlaying","set","queueStatus","console","log","style","color","loopIcon","seeker","htmlFor","parseInt","type","min","max","step","value","onInput","e","target","volume","Song","props","deleteSong","songs","Array","from","splice","playSong","draggableId","video","provided","song","innerRef","draggableProps","dragHandleProps","content","artist","duration","Modal","setRoomId","users","setUsers","setName","invalidRoom","setInvalidRoom","Object","values","generateId","toString","substring","addListeners","id","userId","onDisconnect","remove","overlay","handler","modal","header","roomInfo","navigator","clipboard","writeText","toast","map","user","field","autoComplete","placeholder","submit","tempUserId","once","exists","child","tempRoomId","disabled","invalid","Queue","modalOpen","setModalOpen","queueName","setQueueName","onDragEnd","result","source","reorderdItem","destination","queue","buttons","play","sort","droppableId","droppableProps","videoId","tut","SearchResults","searchResults","axios","get","then","res","videoDuration","data","items","contentDetails","videoDurationMatch","match","includes","replace","hours","hasHours","minutes","seconds","isInQueue","forEach","element","substr","indexOf","catch","container","Navbar","focus","setFocus","inputValue","setInputValue","hasWords","setHasWords","setSearchResults","navbar","search","onSubmit","preventDefault","process","snippet","channelTitle","thumbnails","default","handleSubmit","form","onFocus","onBlur","createContext","App","useRef","lyrics","setLyrics","getLyrics","withArtist","a","solenolyrics","requestLyricsFor","Provider","position","toastOptions","border","background","fontFamily","app","main","playing","loop","onEnded","lyric","wrongLyrics","desc","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0GACAA,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,OAAS,sBAAsB,MAAQ,qBAAqB,OAAS,sBAAsB,QAAU,uBAAuB,SAAW,wBAAwB,OAAS,sBAAsB,MAAQ,qBAAqB,KAAO,oBAAoB,QAAU,yB,mBCA/SD,EAAOC,QAAU,CAAC,IAAM,iBAAiB,OAAS,oBAAoB,MAAQ,mBAAmB,KAAO,kBAAkB,MAAQ,mBAAmB,OAAS,oBAAoB,YAAc,yBAAyB,KAAO,oB,mBCAhOD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,QAAU,wBAAwB,UAAY,0BAA0B,SAAW,yBAAyB,KAAO,qBAAqB,OAAS,uBAAuB,OAAS,uBAAuB,cAAgB,gC,mBCA1QD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,QAAU,wBAAwB,OAAS,uBAAuB,OAAS,uBAAuB,KAAO,qBAAqB,SAAW,2B,mBCA3LD,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,QAAU,uBAAuB,KAAO,oBAAoB,MAAQ,qBAAqB,IAAM,qB,mBCA9ID,EAAOC,QAAU,CAAC,KAAO,mBAAmB,QAAU,wB,mBCAtDD,EAAOC,QAAU,CAAC,cAAgB,qCAAqC,UAAY,mC,mMCajFC,IAASC,cAZU,CACjBC,OAAQ,0CACRC,WAAY,gCACZC,UAAW,gBACXC,cAAe,4BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,eACfC,YAAa,uDAKR,IAAMC,EAAKV,IAASW,W,OCsSdC,EAhTA,WAAO,IAAD,MACnB,EAQIC,qBAAWC,GAPbC,EADF,EACEA,UACAC,EAFF,EAEEA,aACAC,EAHF,EAGEA,kBACAC,EAJF,EAIEA,qBACAC,EALF,EAKEA,YACAC,EANF,EAMEA,SACAC,EAPF,EAOEA,YAEF,EAAwCC,mBAAS,GAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAAwCF,mBAAS,GAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KACA,EAAsCJ,mBAAS,GAA/C,mBAAOK,EAAP,KAAoBC,EAApB,KAEAC,qBAAU,WAER,IAAMC,EAAWC,aAAY,WAAO,IAAD,EAI/B,EACoD,WAH5BC,IAAxBb,EAAYc,cAC8BD,KAA1C,UAAAb,EAAYc,eAAZ,eAAqBC,oBAEyB,QAA1C,UAAAf,EAAYc,eAAZ,eAAqBC,oBACvBN,EAAc,UAACT,EAAYc,eAAb,aAAC,EAAqBC,kBACpCV,GACG,UAAAL,EAAYc,eAAZ,eAAqBC,mBAArB,UACCf,EAAYc,eADb,aACC,EAAqBE,eACrB,SAKP,KAEH,OAAO,WACLC,cAAcN,MAEf,CAACX,IAEJU,qBAAU,WACJT,EAASiB,WAEX3B,EAAG4B,IAAI,SAAWlB,EAASmB,OAAS,WAAWC,GAAG,SAAS,SAACC,GAAU,IAAD,IACnE,UAAAtB,EAAYc,eAAZ,SAAqBS,OAAOD,EAAKE,MAAO,WACxCnB,EACgB,IAAbiB,EAAKE,OAAN,UAAqBxB,EAAYc,eAAjC,aAAqB,EAAqBE,mBAK9CzB,EAAG4B,IAAI,SAAWlB,EAASmB,OAAS,sBAAsBC,GACxD,SACA,SAACC,GACCvB,EAAqBuB,EAAKE,aAI/B,CAACvB,EAASiB,SAAUnB,EAAsBE,EAASmB,OAAQpB,IAE9D,IAAMyB,EAAmB,SAACC,GAAD,OACtBA,GAAKA,GAAK,KAAO,IAAM,EAAIA,EAAI,IAAM,MAAQA,GAE1CC,EAAc,CAClBC,eAAgBxB,EAAe,UAG3ByB,EAAc,CAClBD,eAA+B,IAAftB,EAAqB,UA0JvC,OACE,sBAAKwB,UAAWC,IAAOC,OAAvB,UACE,qBAAKF,UAAWC,IAAOE,QAAvB,SACwB,IAArBrC,EAAUsC,OACT,oCAEA,qCACE,qBACEC,IAAG,UAAEvC,EAAUE,EAAkBsC,cAA9B,aAAE,EAAoCC,UAAUC,IACnDC,IAAI,cAEN,mBAAGT,UAAWC,IAAOS,KAArB,mBACG5C,EAAUE,EAAkBsC,cAD/B,aACG,EAAoCK,aAK7C,sBAAKX,UAAWC,IAAOW,SAAvB,UACE,mBAAGC,MAAM,eAAe,cAAY,OAAOC,QA5C7B,WAMlB,IALA,IAEEC,EAFEC,EAAS,YAAOlD,GAChBmD,EAAeD,EAAUZ,OAItB,IAAMa,GAAc,CACzBF,EAAcG,KAAKC,MAAMD,KAAKE,SAAWH,GACzCA,IAFyB,MAK2B,CAClDD,EAAUD,GACVC,EAAUC,IAFXD,EAAUC,GALc,KAKCD,EAAUD,GALX,KAU3B9C,EAAqB,2BAAKD,GAAN,IAAyBqD,WAAW,KACxDtD,EAAaiD,GACb/C,EAAqB,2BAAKD,GAAN,IAAyBqD,WAAW,KAExD5D,EAAG4B,IAAI,SAAWlB,EAASmB,QAAQgC,IAAI,CACrCxD,UAAWkD,EACXhD,kBAAkB,2BAAMA,GAAP,IAA0BqD,WAAW,SAuBpD,mBAAGR,MAAM,iBAAiB,cAAY,OAAOC,QA5DlC,WACX9C,EAAkBsC,MAAQ,KAAO,IAEnCrC,EAAqB,2BAChBD,GADe,IAElBsC,MAAOtC,EAAkBsC,MAAQ,KAG/BnC,EAASiB,UACX3B,EAAG4B,IAAI,SAAWlB,EAASmB,OAAS,4BAA4BgC,IAC9DtD,EAAkBsC,MAAQ,OAmD5B,mBACEO,MAAO7C,EAAkBqD,UAAY,cAAgB,aACrD,cAAY,OACZP,QA9KU,WAChB7C,EAAqB,2BAChBD,GADe,IAElBqD,WAAYrD,EAAkBqD,aAG5BlD,EAASiB,UACX3B,EAAG4B,IAAI,SAAWlB,EAASmB,OAAS,gCAAgCgC,KACjEtD,EAAkBqD,cAwKnB,mBAAGR,MAAM,iBAAiBC,QA1Gf,WACf,OAAQ9C,EAAkBuD,aACxB,IAAK,WACCvD,EAAkBsC,MAAQ,IAAMxC,EAAUsC,OAC5CoB,QAAQC,IAAI,kBAEZxD,EAAqB,2BAChBD,GADe,IAElBsC,MAAOtC,EAAkBsC,MAAQ,KAG/BnC,EAASiB,UACX3B,EAAG4B,IAAI,SAAWlB,EAASmB,OAAS,4BAA4BgC,IAC9DtD,EAAkBsC,MAAQ,IAGhC,MACF,IAAK,SACCtC,EAAkBsC,MAAQ,IAAMxC,EAAUsC,QAC5CnC,EAAqB,2BAAKD,GAAN,IAAyBsC,MAAO,KACpD7C,EAAG4B,IAAI,SAAWlB,EAASmB,OAAS,4BAA4BgC,IAC9D,KAGFrD,EAAqB,2BAChBD,GADe,IAElBsC,MAAOtC,EAAkBsC,MAAQ,KAG/BnC,EAASiB,UACX3B,EAAG4B,IAAI,SAAWlB,EAASmB,OAAS,4BAA4BgC,IAC9DtD,EAAkBsC,MAAQ,QAxFrB,SAACiB,GAChB,OAAQA,GACN,IAAK,WACH,OACE,mBACEV,MAAM,cACNC,QAAS,WACP7C,EAAqB,2BAChBD,GADe,IAElBuD,YAAa,YAEXpD,EAASiB,UACX3B,EAAG4B,IACD,SAAWlB,EAASmB,OAAS,kCAC7BgC,IAAI,aAIhB,IAAK,SACH,OACE,mBACET,MAAM,cACNa,MAAO,CAAEC,MAAO,WAChBb,QAAS,WACP7C,EAAqB,2BAChBD,GADe,IAElBuD,YAAa,UAEXpD,EAASiB,UACX3B,EAAG4B,IACD,SAAWlB,EAASmB,OAAS,kCAC7BgC,IAAI,WAIhB,IAAK,OACH,OACE,mBACET,MAAM,kBACNa,MAAO,CAAEC,MAAO,WAChBb,QAAS,WACP7C,EAAqB,2BAChBD,GADe,IAElBuD,YAAa,cAEXpD,EAASiB,UACX3B,EAAG4B,IACD,SAAWlB,EAASmB,OAAS,kCAC7BgC,IAAI,gBAoHbM,CAAS5D,EAAkBuD,gBAE9B,sBAAKvB,UAAWC,IAAO4B,OAAvB,UACE,uBAAOC,QAAQ,SAAf,cAC2B/C,IAAxBb,EAAYc,QACTW,EAAiBoC,SAASrD,IAC1B,KAEN,uBACEsD,KAAK,QACLtB,KAAK,SACLuB,IAAK,EACLC,IAAK,GACLC,KAAK,OACLT,MAAO7B,EACPuC,MAAO9D,EACP+D,QAAS,SAACC,GAAO,IAAD,EACd,UAAApE,EAAYc,eAAZ,SAAqBS,OAClB6C,EAAEC,OAAOH,MAAQlE,EAAYc,QAAQE,cAAiB,IACvD,WAEFX,EAAgB+D,EAAEC,OAAOH,OACrBjE,EAASiB,UACX3B,EAAG4B,IAAI,SAAWlB,EAASmB,OAAS,WAAWgC,IAC5CgB,EAAEC,OAAOH,MAAQlE,EAAYc,QAAQE,cAAiB,QAK/D,uBAAO4C,QAAQ,SAAf,cAC2B/C,IAAxBb,EAAYc,QACTW,EAAiBoC,SAAQ,UAAC7D,EAAYc,eAAb,aAAC,EAAqBE,gBAC/C,YAGR,sBAAKc,UAAWC,IAAOuC,OAAvB,UACE,mBAAG3B,MAAM,kBAAkB,cAAY,SACvC,uBACEmB,KAAK,QACLtB,KAAK,SACLuB,IAAK,EACLC,IAAK,KACLC,KAAK,MACLT,MAAO3B,EACPqC,MAAOjE,EAASqE,OAChBH,QAAS,SAACC,GACRlE,EAAY,2BACPD,GADM,IAETqE,OAAQF,EAAEC,OAAOH,SAEnB3D,EAAgB6D,EAAEC,OAAOH,iB,0CCvOtBK,EAhEF,SAACC,GACZ,MAMI9E,qBAAWC,GALbC,EADF,EACEA,UACAC,EAFF,EAEEA,aACAC,EAHF,EAGEA,kBACAC,EAJF,EAIEA,qBACAE,EALF,EAKEA,SAGIwE,EAAa,WACjB,IAAMC,EAAQC,MAAMC,KAAKhF,GACzB8E,EAAMG,OAAOL,EAAMpC,MAAO,GAEtBoC,EAAMpC,QAAUxC,EAAUsC,OAAS,GACrCnC,EAAqB,2BAAKD,GAAN,IAAyBsC,MAAOoC,EAAMpC,MAAQ,KAClE7C,EAAG4B,IAAI,SAAWlB,EAASmB,OAAS,cAAcgC,IAAIsB,GACtDnF,EAAG4B,IAAI,SAAWlB,EAASmB,OAAS,4BAA4BgC,IAC9DoB,EAAMpC,MAAQ,IAEc,IAArBxC,EAAUsC,QACnBnC,EAAqB,2BAAKD,GAAN,IAAyBsC,MAAO,KACtD7C,EAAG4B,IAAI,SAAWlB,EAASmB,OAAS,cAAcgC,IAAIsB,GACtDnF,EAAG4B,IAAI,SAAWlB,EAASmB,OAAS,4BAA4BgC,IAAI,GACpEvD,EAAa6E,IAGTI,EAAW,WACf/E,EAAqB,2BAChBD,GADe,IAElBsC,MAAOoC,EAAMpC,MACbe,WAAW,KAGTlD,EAASiB,UACX3B,EAAG4B,IAAI,SAAWlB,EAASmB,OAAS,sBAAsBgC,IAA1D,2BACKtD,GADL,IAEEsC,MAAOoC,EAAMpC,MACbe,WAAW,MAIjB,OACE,cAAC,IAAD,CAAW4B,YAAaP,EAAMQ,MAAMvC,MAAOL,MAAOoC,EAAMpC,MAAxD,SACG,SAAC6C,GAAD,OACC,0DACEnD,UAAWC,IAAOmD,KAClB/D,IAAK8D,EAASE,UACVF,EAASG,gBACTH,EAASI,iBAJf,cAME,mBAAG1C,MAAM,cAAcC,QAASkC,IAChC,sBAAKhD,UAAWC,IAAOuD,QAAvB,UACE,4BAAId,EAAMQ,MAAMvC,QAChB,4BAAI+B,EAAMQ,MAAMO,YAElB,4BAAIf,EAAMQ,MAAMQ,WAChB,mBAAG7C,MAAM,mBAAmBC,QAAS6B,IACrC,mBAAG9B,MAAM,aAAa,cAAY,iB,iCCoJ7B8C,EA7MD,SAACjB,GACb,MAOI9E,qBAAWC,GANbC,EADF,EACEA,UACAC,EAFF,EAEEA,aACAC,EAHF,EAGEA,kBACAC,EAJF,EAIEA,qBACAE,EALF,EAKEA,SACAC,EANF,EAMEA,YAEF,EAA4BC,mBAAS,IAArC,mBAAOiB,EAAP,KAAesE,EAAf,KACA,EAA0BvF,mBAAS,IAAnC,mBAAOwF,EAAP,KAAcC,EAAd,KACA,EAAwBzF,mBAAS,IAAjC,mBAAOqC,EAAP,KAAaqD,EAAb,KACA,EAAsC1F,oBAAS,GAA/C,mBAAO2F,EAAP,KAAoBC,EAApB,KAEArF,qBAAU,WACJT,EAASiB,UACX3B,EAAG4B,IAAI,SAAWlB,EAASmB,OAAS,UAAUC,GAAG,SAAS,SAACC,GACzDsE,EAASI,OAAOC,OAAO3E,EAAKE,aAG/B,CAACvB,EAASiB,SAAUjB,EAASmB,SAEhC,IAAM8E,EAAa,WACjB,OAAQlD,KAAKE,SAAW,GAAGiD,SAAS,IAAIC,UAAU,IAG9CC,EAAe,SAACC,GAEpB/G,EAAG4B,IAAI,SAAWmF,EAAK,cAAcjF,GAAG,SAAS,SAACC,GAC5CA,EAAKE,MACP3B,EAAayB,EAAKE,OAElB3B,EAAa,QA6FnB,OARAa,qBAAU,YACkB,IAAtBT,EAASiB,UACX3B,EAAG4B,IAAI,SAAWlB,EAASmB,OAAS,UAAYnB,EAASsG,QACtDC,eACAC,WAEJ,CAACxG,IAGF,qCACE,qBAAK6B,UAAWC,IAAO2E,QAAS9D,QAAS,kBAAM4B,EAAMmC,aACrD,sBAAK7E,UAAWC,IAAO6E,MAAvB,UACE,sBAAK9E,UAAWC,IAAO8E,OAAvB,UACE,oDACA,mBACElE,MAAM,cACN,cAAY,OACZC,QAAS,kBAAM4B,EAAMmC,gBAIvB1G,EAASiB,SA0CT,sBAAKY,UAAWC,IAAO+E,SAAvB,UACE,sBACEhF,UAAWC,IAAOX,OAClBwB,QAAS,SAACwB,GACR2C,UAAUC,UAAUC,UAAUhH,EAASmB,QACvC8F,YAAM,wBAJV,UAOE,yCAAYjH,EAASmB,UACrB,mBAAGuB,MAAM,oBAGX,uCACA,qBAAKb,UAAWC,IAAO4D,MAAvB,SACGA,EAAMwB,KAAI,SAACC,GACV,OAAO,mBAAGtF,UAAWC,IAAOqF,KAArB,SAA4BA,YAxDzC,qCACE,sBAAKtF,UAAWC,IAAOsF,MAAvB,UACE,uBAAOzD,QAAQ,OAAf,SACE,mBAAG9B,UAAU,aAAa,cAAY,WAExC,uBACEgC,KAAK,OACLwC,GAAG,OACHgB,aAAa,MACbC,YAAY,OACZrD,MAAO1B,EACP2B,QAAS,SAACC,GAAD,OAAOyB,EAAQzB,EAAEC,OAAOH,aAGrC,sBAAKpC,UAAWC,IAAOsF,MAAvB,UACE,uBAAOzD,QAAQ,SAAf,SACE,mBAAG9B,UAAU,yBAEf,uBACEgC,KAAK,OACLwC,GAAG,SACHgB,aAAa,MACbC,YAAY,UACZrD,MAAO9C,EACP+C,QAAS,SAACC,GAAD,OAAOsB,EAAUtB,EAAEC,OAAOH,aAGvC,yBACEpC,UAAWC,IAAOyF,OAClB5E,QAnIS,WACnB,IAAI6E,EAAavB,IAEjB,GAAe,KAAX9E,EAGF7B,EAAG4B,IAAI,SAAWC,GAAQsG,KAAK,SAAS,SAACpG,GACnCA,EAAKqG,UACPzH,EAAY,CACVsC,KAAMA,EACN+D,OAAQkB,EACRvG,UAAU,EACVE,OAAQA,IAEV7B,EAAG4B,IAAI,SAAWC,EAAS,UAAUgC,IAArC,2BACK9B,EAAKE,MAAMmE,OADhB,kBAEG8B,EAAajF,KAGhBjD,EAAG4B,IAAI,SAAWC,EAAS,UAAUsG,KAAK,SAAS,SAACpG,GAClDsE,EAASI,OAAOC,OAAO3E,EAAKE,WAG9BjC,EAAG4B,IAAI,SAAWC,EAAS,UAAUC,GAAG,eAAe,SAACC,GACtD4F,YAAM5F,EAAKE,MAAQ,uBAGrBjC,EAAG4B,IAAI,SAAWC,EAAS,UAAUC,GAAG,iBAAiB,SAACC,GACxD4F,YAAM5F,EAAKE,MAAQ,qBAGjBF,EAAKsG,MAAM,aAAaD,UAC1B9H,EAAayB,EAAKE,MAAM5B,WAC1BG,EAAqBuB,EAAKE,MAAM1B,mBAGhCP,EAAG4B,IAAI,SAAWC,EAAS,gCAAgCgC,KAAI,GAC/D7D,EAAG4B,IAAI,SAAWC,EAAS,WAAWgC,IAAI,OACrC2C,GAAe,MAGxBM,EAAajF,OACR,CAEL,IAAIyG,EAAa3B,IAEjBhG,EAAY,CACVsC,KAAMA,EACN+D,OAAQkB,EACRvG,UAAU,EACVE,OAAQyG,IAGVtI,EAAG4B,IAAI,SAAW0G,GAAYzE,IAAI,CAChCuC,MAAM,eACH8B,EAAajF,GAEhBjB,OAAQ,EACR3B,UAAWA,EACXE,kBAAmBA,IAGrBP,EAAG4B,IAAI,SAAW0G,EAAa,UAAUH,KAAK,SAAS,SAACpG,GACtDsE,EAASI,OAAOC,OAAO3E,EAAKE,WAG9BjC,EAAG4B,IAAI,SAAW0G,EAAa,UAAUxG,GAAG,eAAe,SAACC,GAC1D4F,YAAM5F,EAAKE,MAAQ,uBAGrBjC,EAAG4B,IAAI,SAAW0G,EAAa,UAAUxG,GAAG,iBAAiB,SAACC,GAC5D4F,YAAM5F,EAAKE,MAAQ,qBAGrB6E,EAAawB,GACbnC,EAAUmC,KAyDFC,SAAmB,KAATtF,EAHZ,UAKGpB,EAAS,OAAS,SALrB,WAOC0E,EACC,mBAAGhE,UAAWC,IAAOgG,QAArB,6BAEA,8EC7ECC,EAhGD,WACZ,MAAkC7H,oBAAS,GAA3C,mBAAO8H,EAAP,KAAkBC,EAAlB,KACA,EAAkC/H,mBAAS,SAA3C,mBAAOgI,EAAP,KAAkBC,EAAlB,KACA,EAMI1I,qBAAWC,GALbC,EADF,EACEA,UACAC,EAFF,EAEEA,aACAC,EAHF,EAGEA,kBACAC,EAJF,EAIEA,qBACAE,EALF,EAKEA,SAyCF,OACE,qCACGgI,EAAY,cAAC,EAAD,CAAOA,UAAWA,EAAWtB,QANzB,WACnBuB,GAAa,MAK2D,GACtE,cAAC,IAAD,CAAiBG,UAzCH,SAACC,GACjB,IAAM5D,EAAQC,MAAMC,KAAKhF,GACzB,EAAuB8E,EAAMG,OAAOyD,EAAOC,OAAOnG,MAAO,GAAlDoG,EAAP,oBACA9D,EAAMG,OAAOyD,EAAOG,YAAYrG,MAAO,EAAGoG,GAE1C3I,EAAa6E,GAEbnF,EAAG4B,IAAI,SAAWlB,EAASmB,OAAS,cAAcgC,IAAIsB,IAkCpD,SACE,sBAAK5C,UAAWC,IAAO2G,MAAvB,UACE,uBACE5E,KAAK,OACLI,MAAOiE,EACPhE,QAAS,SAACC,GAAD,OAAOgE,EAAahE,EAAEC,OAAOH,UAExC,sBAAKpC,UAAWC,IAAO4G,QAAvB,UACE,wBAAQ7G,UAAWC,IAAO6G,KAAMhG,QAvC7B,WACX7C,EAAqB,2BAAKD,GAAN,IAAyBsC,MAAO,EAAGe,WAAW,KAElE5D,EAAG4B,IAAI,SAAWlB,EAASmB,OAAS,sBAAsBgC,IAA1D,2BACKtD,GADL,IAEEsC,MAAO,EACPe,WAAW,MAiCL,SACE,mBAAGR,MAAM,aAAa,cAAY,WAEpC,wBAAQC,QAhCE,WAClB,IAAIE,EAAYlD,EAEhBkD,EAAU+F,MAAK,kBAAM7F,KAAKE,SAAW,MACrCnD,EAAqB,2BAAKD,GAAN,IAAyBqD,WAAW,KACxDtD,EAAaiD,GACb/C,EAAqB,2BAAKD,GAAN,IAAyBqD,WAAW,KAExD5D,EAAG4B,IAAI,SAAWlB,EAASmB,OAAS,cAAcgC,IAAIN,GACtDvD,EAAG4B,IAAI,SAAWlB,EAASmB,OAAS,gCAAgCgC,KAClE,IAsBM,SACE,mBAAGT,MAAM,eAAe,cAAY,WAEtC,wBAAQC,QAAS,kBAAMsF,GAAa,IAApC,SACE,mBAAGvF,MAAM,sBAGb,cAAC,IAAD,CAAWmG,YAAY,QAAvB,SACG,SAAC7D,GAAD,OACC,8CACEnD,UAAWC,IAAO2C,MAClBvD,IAAK8D,EAASE,UACVF,EAAS8D,gBAHf,cAKGnJ,EAAUsC,OAAS,EAClBtC,EAAUuH,KAAI,SAACjC,EAAM9C,GACnB,OACE,cAAC,EAAD,CAAM4C,MAAOE,EAAyB9C,MAAOA,GAArB8C,EAAK8D,YAIjC,oBAAIlH,UAAWC,IAAOkH,IAAtB,2CAEDhE,EAASsC,4B,qFCCX2B,EA1FO,SAAC1E,GACrB,MAA8C9E,qBAAWC,GAAjDC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,aAAcI,EAAjC,EAAiCA,SA8EjC,OACE,sBAAK6B,UAAWC,IAAOoH,cAAevG,QA5Ef,WACvBwG,IACGC,IADH,8EAE2E7E,EAAMQ,MAAMgE,QAFvF,iDAIGM,MAAK,SAACC,GACL,IAAIC,EAAgBD,EAAIE,KAAKC,MAAM,GAAGC,eAAenE,SACjDoE,EAAqBJ,EAAcK,MAAM,aACzCtE,EAASf,EAAMQ,MAAMO,OAErBA,EAAOuE,SAAS,aAClBvE,EAASA,EAAOwE,QAAQ,UAAW,KAGrC,IAAIC,EAAQ,EACRC,GAAW,EACXC,EAAU,EACVC,EAAU,EACVC,GAAY,EAEhBR,EAAmBS,SAAQ,SAACC,GACtBA,EAAQR,SAAS,OACnBG,GAAW,EACXD,EAAQM,EAAQC,OAAO,EAAGD,EAAQE,QAAQ,OAExCF,EAAQR,SAAS,OACnBI,EAAUI,EAAQC,OAAO,EAAGD,EAAQE,QAAQ,OAC1CF,EAAQR,SAAS,OACnBK,EAAUG,EAAQC,OAAO,EAAGD,EAAQE,QAAQ,UAG5CR,EAAQ,KAAmB,IAAbC,IAChBD,EAAQ,IAAMA,GAEZE,EAAU,KAAmB,IAAbD,IAClBC,EAAU,IAAMA,GAEdC,EAAU,KACZA,EAAU,IAAMA,GAGlBX,EAAa,UACXS,EACID,EAAQ,IAAME,EAAU,IAAMC,EAC9BD,EAAU,IAAMC,GAGtB,IAAMjF,EAAO,CACXzC,MAAO+B,EAAMQ,MAAMvC,MACnB8C,OAAQA,EACRyD,QAASxE,EAAMQ,MAAMgE,QACrB3G,UAAWmC,EAAMQ,MAAM3C,UACvBmD,SAAUgE,GAIZ5J,EAAUyK,SAAQ,SAACC,GACbA,EAAQ7H,QAAUyC,EAAKzC,QACzB2H,GAAY,OAIE,IAAdA,IACFvK,EAAa,GAAD,mBAAKD,GAAL,CAAgBsF,KACxBjF,EAASiB,UACX3B,EAAG4B,IAAI,SAAWlB,EAASmB,OAAS,cAAcgC,IAAlD,sBACKxD,GADL,CAEEsF,SAKPuF,OAAM,SAACrG,GAAD,OAAOd,QAAQC,IAAIa,OAI5B,UACE,sBAAKtC,UAAWC,IAAO2I,UAAvB,UACE,4BAAIlG,EAAMQ,MAAMvC,QAChB,4BAAI+B,EAAMQ,MAAMO,YAElB,qBAAKpD,IAAKqC,EAAMQ,MAAM3C,UAAUC,IAAKC,IAAI,kBCrFlCoI,EAAS,WACpB,IAEA,EAA0BxK,oBAAS,GAAnC,mBAAOyK,EAAP,KAAcC,EAAd,KACA,EAAoC1K,mBAAS,IAA7C,mBAAO2K,EAAP,KAAmBC,EAAnB,KACA,EAAgC5K,oBAAS,GAAzC,mBAAO6K,EAAP,KAAiBC,EAAjB,KACA,EAA0C9K,mBAAS,IAAnD,mBAAOgJ,EAAP,KAAsB+B,EAAtB,KAEAxK,qBAAU,WACJoK,EACFG,GAAY,IAEZA,GAAY,GACZC,EAAiB,OAElB,CAACJ,IAyBJ,OACE,sBAAKhJ,UAAWC,IAAOoJ,OAAvB,UAC4B,IAAzBhC,EAAcjH,OAAe,qBAAKJ,UAAWC,IAAO2E,UAAkB,GAEvE,qBAAK5E,UAAWC,IAAO2I,UAAvB,SACE,sBAAK5I,UAAS,UAAKC,IAAOqJ,OAAZ,YAAsBR,EAAQ7I,IAAO6I,MAAQ,IAA3D,UACE,mBAAG9I,UAAU,kBACb,sBAAMuJ,SAAU,SAACjH,GAAD,OA9BH,SAACA,GACpBA,EAAEkH,iBAEFJ,EAAiB,IACjB9B,IACGC,IADH,iHAE8GyB,EAF9G,gBApBcS,4CAwBXjC,MAAK,SAACC,GACL2B,EACE3B,EAAIE,KAAKC,MAAMvC,KAAI,SAACnC,GAClB,MAAO,CACLvC,MAAOuC,EAAMwG,QAAQ/I,MACrB8C,OAAQP,EAAMwG,QAAQC,aACtBzC,QAAShE,EAAMsB,GAAG0C,QAClB3G,UAAW2C,EAAMwG,QAAQE,WAAWC,gBAK3ClB,OAAM,SAACrG,GAAD,OAAOd,QAAQC,IAAIa,MAUCwH,CAAaxH,IAAItC,UAAWC,IAAO8J,KAA1D,SACE,uBACEvE,aAAa,MACbpD,MAAO4G,EACPhH,KAAK,OACLwC,GAAG,SACHiB,YAAY,SACZuE,QAAS,kBAAMjB,GAAS,IACxBkB,OAAQ,WACNlB,GAAS,IAEX1G,QAAS,SAACC,GAAD,OAAO2G,EAAc3G,EAAEC,OAAOH,YAI1C8G,EACC,mBACElJ,UAAU,sBACVc,QAAS,kBAAMmI,EAAc,OAG/B,GAEwB,IAAzB5B,EAAcjH,OACb,qBAAKJ,UAAWC,IAAOoH,cAAvB,SACGA,EAAchC,KAAI,SAACnC,GAClB,OAAO,cAAC,EAAD,CAAeA,MAAOA,GAAYA,EAAMgE,cAInD,YCvECrJ,EAAmBqM,wBAAc,MAgJ/BC,MA9If,WAAgB,IAAD,IACPjM,EAAckM,mBAEpB,EAAgC/L,mBAAS,CACvCqC,KAAM,GACN+D,OAAQ,EACRrF,UAAU,EACVoD,OAAQ,EACRlD,OAAQ,IALV,mBAAOnB,EAAP,KAAiBC,EAAjB,KAQA,EAAkCC,mBAAS,IAA3C,mBAAOP,EAAP,KAAkBC,EAAlB,KACA,EAA4BM,mBAAS,IAArC,mBAAOgM,EAAP,KAAeC,EAAf,KACA,EAAkDjM,mBAAS,CACzDiC,MAAO,EACPe,WAAW,EACXE,YAAa,aAHf,mBAAOvD,EAAP,KAA0BC,EAA1B,KAba,SAmBEsM,EAnBF,8EAmBb,WAAyBC,GAAzB,uBAAAC,EAAA,uEAEwB1L,IAAhBb,EAFR,oBAGUmM,EAAS,IACTG,EAJV,gCAKuBE,IAAaC,kBAC1B,UAAA7M,EAAUE,EAAkBsC,cAA5B,eAAoCK,QAApC,UACE7C,EAAUE,EAAkBsC,cAD9B,aACE,EAAoCmD,SAPhD,OAKQ4G,EALR,+CAUuBK,IAAaC,iBAAb,UACb7M,EAAUE,EAAkBsC,cADf,aACb,EAAoCK,OAX9C,QAUQ0J,EAVR,uBAgBqBtL,IAAXsL,EAhBV,kCAiBuBK,IAAaC,iBAAb,UACb7M,EAAUE,EAAkBsC,cADf,aACb,EAAoCK,OAlB9C,QAiBQ0J,EAjBR,eAsBMC,EAAUD,GAtBhB,0DAyBI7I,QAAQC,IAAR,MAzBJ,2DAnBa,sBAoDb,OAJA7C,qBAAU,WACJd,EAAUsC,OAAS,GAAGmK,GAAU,KACnC,WAACzM,EAAUE,EAAkBsC,cAA7B,aAAC,EAAoCK,MAAO7C,EAAUsC,SAGvD,eAACvC,EAAiB+M,SAAlB,CACExI,MAAO,CACLtE,YACAC,eACAC,oBACAC,uBACAE,WACAC,cACAF,eARJ,UAWE,cAAC,IAAD,CACE2M,SAAS,YACTC,aAAc,CACZpJ,MAAO,CACLqJ,OAAQ,oBACRC,WAAY,UACZrJ,MAAO,UACPsJ,WAAY,uBAIlB,sBAAKjL,UAAWC,IAAOiL,IAAvB,UACE,cAAC,EAAD,IACA,0BAASlL,UAAWC,IAAOkL,KAA3B,UACE,sBAAKnL,UAAWC,IAAOoK,OAAvB,UACwB,IAArBvM,EAAUsC,OACT,cAAC,IAAD,CACEI,IAAG,6DACD1C,EAAUE,EAAkBsC,cAD3B,aACD,EAAoC4G,SAEtC1E,OAAQrE,EAASqE,OACjBxC,UAAWC,IAAOC,OAClBb,IAAKnB,EACLkN,QAASpN,EAAkBqD,UAC3BgK,KAAwC,SAAlCrN,EAAkBuD,YACxB+J,QAAS,WACP,OAAQtN,EAAkBuD,aACxB,IAAK,WACCvD,EAAkBsC,MAAQ,IAAMxC,EAAUsC,OAC5CoB,QAAQC,IAAI,iBAEZxD,EAAqB,2BAChBD,GADe,IAElBsC,MAAOtC,EAAkBsC,MAAQ,KAGrC,MACF,IAAK,SACCtC,EAAkBsC,MAAQ,IAAMxC,EAAUsC,OAC5CnC,EAAqB,2BAChBD,GADe,IAElBsC,MAAO,KAGTrC,EAAqB,2BAChBD,GADe,IAElBsC,MAAOtC,EAAkBsC,MAAQ,SAU7C,GAEF,wCACA,mBAAGN,UAAWC,IAAOsL,MAArB,SAA6BlB,IAC7B,wBACEvJ,QAAS,kBAAMyJ,GAAU,IACzBvK,UAAWC,IAAOuL,YAFpB,2BAMA,mBAAGxL,UAAWC,IAAOwL,KAArB,+CAEF,qBAAKzL,UAAWC,IAAO2G,MAAvB,SACE,cAAC,EAAD,MAEF,cAAC,EAAD,cCjJV8E,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.07096536.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"Modal_modal__2_j5d\",\"header\":\"Modal_header__crXKq\",\"field\":\"Modal_field__11sbi\",\"submit\":\"Modal_submit__11rRN\",\"invalid\":\"Modal_invalid__ux5Nr\",\"roomInfo\":\"Modal_roomInfo__1n45X\",\"roomId\":\"Modal_roomId__3qTqy\",\"users\":\"Modal_users__35vFy\",\"user\":\"Modal_user__Q_AbX\",\"overlay\":\"Modal_overlay__3Q3c3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__1OWQ3\",\"lyrics\":\"App_lyrics__1pagf\",\"queue\":\"App_queue__3qMEr\",\"main\":\"App_main__3BfB4\",\"lyric\":\"App_lyric__21DlY\",\"player\":\"App_player__LYUPf\",\"wrongLyrics\":\"App_wrongLyrics__2hC7c\",\"desc\":\"App_desc__2k7uE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__3FojS\",\"overlay\":\"Navbar_overlay__3h38R\",\"container\":\"Navbar_container__1dv6E\",\"together\":\"Navbar_together__1PkNL\",\"form\":\"Navbar_form__11p4w\",\"search\":\"Navbar_search__3RCj6\",\"cancel\":\"Navbar_cancel__24JmP\",\"searchResults\":\"Navbar_searchResults__2dpG7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"player\":\"Player_player__jUBSj\",\"details\":\"Player_details__3Asoa\",\"seeker\":\"Player_seeker__1ODAF\",\"volume\":\"Player_volume__2D9wT\",\"name\":\"Player_name__2eRk1\",\"controls\":\"Player_controls__dUG8T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"queue\":\"Queue_queue__2Q5GP\",\"buttons\":\"Queue_buttons__2Jz3M\",\"play\":\"Queue_play__3eKnY\",\"songs\":\"Queue_songs__1CI2L\",\"tut\":\"Queue_tut__2Sij8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"song\":\"Song_song__cAklu\",\"content\":\"Song_content__3LK2H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchResults\":\"SearchResults_searchResults__2Sx3q\",\"container\":\"SearchResults_container__2Y1SG\"};","import firebase from \"firebase\";\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyDsOlP2febwsRdCoj_5VVLtQio9VOL-QkU\",\r\n    authDomain: \"ytmusic-clone.firebaseapp.com\",\r\n    projectId: \"ytmusic-clone\",\r\n    storageBucket: \"ytmusic-clone.appspot.com\",\r\n    messagingSenderId: \"250950387255\",\r\n    appId: \"1:250950387255:web:58db6ca91f6ebc37cae1b2\",\r\n    measurementId: \"G-FLSQRV1XC3\",\r\n    databaseURL: 'https://ytmusic-clone-default-rtdb.firebaseio.com/'\r\n  };\r\n\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n  export const db = firebase.database();","import React, { useState, useContext, useEffect } from \"react\";\r\nimport styles from \"./Player.module.scss\";\r\nimport { SongQueueContext } from \"../../App\";\r\nimport { db } from \"../../firebase/firebase\";\r\n\r\nconst Player = () => {\r\n  const {\r\n    songQueue,\r\n    setSongQueue,\r\n    currentSongStatus,\r\n    setCurrentSongStatus,\r\n    videoPlayer,\r\n    userInfo,\r\n    setUserInfo,\r\n  } = useContext(SongQueueContext);\r\n  const [seekerLength, setSeekerLength] = useState(0);\r\n  const [volumeLength, setVolumeLength] = useState(0);\r\n  const [currentTime, setCurrentTime] = useState(0);\r\n\r\n  useEffect(() => {\r\n    //Update seeker every half a second\r\n    const interval = setInterval(() => {\r\n      if (\r\n        videoPlayer.current !== undefined &&\r\n        videoPlayer.current?.getCurrentTime() !== undefined\r\n      ) {\r\n        if (videoPlayer.current?.getCurrentTime() !== null) {\r\n          setCurrentTime(videoPlayer.current?.getCurrentTime());\r\n          setSeekerLength(\r\n            (videoPlayer.current?.getCurrentTime() /\r\n              videoPlayer.current?.getDuration()) *\r\n              100\r\n          );\r\n        } else {\r\n        }\r\n      }\r\n    }, 500);\r\n\r\n    return () => {\r\n      clearInterval(interval);\r\n    };\r\n  }, [videoPlayer]);\r\n\r\n  useEffect(() => {\r\n    if (userInfo.isInRoom) {\r\n      //Seeker listener\r\n      db.ref(\"rooms/\" + userInfo.roomId + \"/seekTo\").on(\"value\", (snap) => {\r\n        videoPlayer.current?.seekTo(snap.val(), \"seconds\");\r\n        setSeekerLength(\r\n          (snap.val() * 100) / videoPlayer.current?.getDuration()\r\n        );\r\n      });\r\n\r\n      //Song status listener\r\n      db.ref(\"rooms/\" + userInfo.roomId + \"/currentSongStatus\").on(\r\n        \"value\",\r\n        (snap) => {\r\n          setCurrentSongStatus(snap.val());\r\n        }\r\n      );\r\n    }\r\n  }, [userInfo.isInRoom, setCurrentSongStatus, userInfo.roomId, videoPlayer]);\r\n\r\n  const secondsToMinutes = (s) =>\r\n    (s - (s %= 60)) / 60 + (9 < s ? \":\" : \":0\") + s;\r\n\r\n  const seekerStyle = {\r\n    backgroundSize: seekerLength + \"% 100%\",\r\n  };\r\n\r\n  const volumeStyle = {\r\n    backgroundSize: volumeLength * 100 + \"% 100%\",\r\n  };\r\n\r\n  const playPause = () => {\r\n    setCurrentSongStatus({\r\n      ...currentSongStatus,\r\n      isPlaying: !currentSongStatus.isPlaying,\r\n    });\r\n\r\n    if (userInfo.isInRoom) {\r\n      db.ref(\"rooms/\" + userInfo.roomId + \"/currentSongStatus/isPlaying\").set(\r\n        !currentSongStatus.isPlaying\r\n      );\r\n    }\r\n  };\r\n\r\n  const loopIcon = (queueStatus) => {\r\n    switch (queueStatus) {\r\n      case \"noRepeat\":\r\n        return (\r\n          <i\r\n            class=\"fas fa-redo\"\r\n            onClick={() => {\r\n              setCurrentSongStatus({\r\n                ...currentSongStatus,\r\n                queueStatus: \"repeat\",\r\n              });\r\n              if (userInfo.isInRoom)\r\n                db.ref(\r\n                  \"rooms/\" + userInfo.roomId + \"/currentSongStatus/queueStatus\"\r\n                ).set(\"repeat\");\r\n            }}\r\n          ></i>\r\n        );\r\n      case \"repeat\":\r\n        return (\r\n          <i\r\n            class=\"fas fa-redo\"\r\n            style={{ color: \"#F6C90E\" }}\r\n            onClick={() => {\r\n              setCurrentSongStatus({\r\n                ...currentSongStatus,\r\n                queueStatus: \"loop\",\r\n              });\r\n              if (userInfo.isInRoom)\r\n                db.ref(\r\n                  \"rooms/\" + userInfo.roomId + \"/currentSongStatus/queueStatus\"\r\n                ).set(\"loop\");\r\n            }}\r\n          ></i>\r\n        );\r\n      case \"loop\":\r\n        return (\r\n          <i\r\n            class=\"fas fa-infinity\"\r\n            style={{ color: \"#F6C90E\" }}\r\n            onClick={() => {\r\n              setCurrentSongStatus({\r\n                ...currentSongStatus,\r\n                queueStatus: \"noRepeat\",\r\n              });\r\n              if (userInfo.isInRoom)\r\n                db.ref(\r\n                  \"rooms/\" + userInfo.roomId + \"/currentSongStatus/queueStatus\"\r\n                ).set(\"noRepeat\");\r\n            }}\r\n          ></i>\r\n        );\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const nextSong = () => {\r\n    switch (currentSongStatus.queueStatus) {\r\n      case \"noRepeat\":\r\n        if (currentSongStatus.index + 1 === songQueue.length) {\r\n          console.log(\"no more songs\");\r\n        } else {\r\n          setCurrentSongStatus({\r\n            ...currentSongStatus,\r\n            index: currentSongStatus.index + 1,\r\n          });\r\n\r\n          if (userInfo.isInRoom)\r\n            db.ref(\"rooms/\" + userInfo.roomId + \"/currentSongStatus/index\").set(\r\n              currentSongStatus.index + 1\r\n            );\r\n        }\r\n        break;\r\n      case \"repeat\":\r\n        if (currentSongStatus.index + 1 === songQueue.length) {\r\n          setCurrentSongStatus({ ...currentSongStatus, index: 0 });\r\n          db.ref(\"rooms/\" + userInfo.roomId + \"/currentSongStatus/index\").set(\r\n            0\r\n          );\r\n        } else {\r\n          setCurrentSongStatus({\r\n            ...currentSongStatus,\r\n            index: currentSongStatus.index + 1,\r\n          });\r\n\r\n          if (userInfo.isInRoom)\r\n            db.ref(\"rooms/\" + userInfo.roomId + \"/currentSongStatus/index\").set(\r\n              currentSongStatus.index + 1\r\n            );\r\n        }\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const lastSong = () => {\r\n    if (currentSongStatus.index - 1 === -1) {\r\n    } else {\r\n      setCurrentSongStatus({\r\n        ...currentSongStatus,\r\n        index: currentSongStatus.index - 1,\r\n      });\r\n\r\n      if (userInfo.isInRoom)\r\n        db.ref(\"rooms/\" + userInfo.roomId + \"/currentSongStatus/index\").set(\r\n          currentSongStatus.index - 1\r\n        );\r\n    }\r\n  };\r\n\r\n  const shuffleSong = () => {\r\n    let tempArray = [...songQueue];\r\n    let currentIndex = tempArray.length,\r\n      randomIndex;\r\n\r\n    //Fisher-Yates (aka Knuth) Shuffle\r\n    while (0 !== currentIndex) {\r\n      randomIndex = Math.floor(Math.random() * currentIndex);\r\n      currentIndex--;\r\n\r\n      // And swap it with the current element.\r\n      [tempArray[currentIndex], tempArray[randomIndex]] = [\r\n        tempArray[randomIndex],\r\n        tempArray[currentIndex],\r\n      ];\r\n    }\r\n    setCurrentSongStatus({ ...currentSongStatus, isPlaying: false });\r\n    setSongQueue(tempArray);\r\n    setCurrentSongStatus({ ...currentSongStatus, isPlaying: true });\r\n\r\n    db.ref(\"rooms/\" + userInfo.roomId).set({\r\n      songQueue: tempArray,\r\n      currentSongStatus: { ...currentSongStatus, isPlaying: true },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className={styles.player}>\r\n      <div className={styles.details}>\r\n        {songQueue.length === 0 ? (\r\n          <p>---</p>\r\n        ) : (\r\n          <>\r\n            <img\r\n              src={songQueue[currentSongStatus.index]?.thumbnail.url}\r\n              alt=\"thumbnail\"\r\n            />\r\n            <p className={styles.name}>\r\n              {songQueue[currentSongStatus.index]?.title}\r\n            </p>\r\n          </>\r\n        )}\r\n      </div>\r\n      <div className={styles.controls}>\r\n        <i class=\"fa fa-random\" aria-hidden=\"true\" onClick={shuffleSong}></i>\r\n        <i class=\"fa fa-backward\" aria-hidden=\"true\" onClick={lastSong}></i>\r\n        <i\r\n          class={currentSongStatus.isPlaying ? \"fa fa-pause\" : \"fa fa-play\"}\r\n          aria-hidden=\"true\"\r\n          onClick={playPause}\r\n        ></i>\r\n        <i class=\"fas fa-forward\" onClick={nextSong}></i>\r\n        {loopIcon(currentSongStatus.queueStatus)}\r\n      </div>\r\n      <div className={styles.seeker}>\r\n        <label htmlFor=\"seeker\">\r\n          {videoPlayer.current !== undefined\r\n            ? secondsToMinutes(parseInt(currentTime))\r\n            : \"\"}\r\n        </label>\r\n        <input\r\n          type=\"range\"\r\n          name=\"seeker\"\r\n          min={0}\r\n          max={99}\r\n          step=\"0.02\"\r\n          style={seekerStyle}\r\n          value={seekerLength}\r\n          onInput={(e) => {\r\n            videoPlayer.current?.seekTo(\r\n              (e.target.value * videoPlayer.current.getDuration()) / 100,\r\n              \"seconds\"\r\n            );\r\n            setSeekerLength(e.target.value);\r\n            if (userInfo.isInRoom) {\r\n              db.ref(\"rooms/\" + userInfo.roomId + \"/seekTo\").set(\r\n                (e.target.value * videoPlayer.current.getDuration()) / 100\r\n              );\r\n            }\r\n          }}\r\n        />\r\n        <label htmlFor=\"seeker\">\r\n          {videoPlayer.current !== undefined\r\n            ? secondsToMinutes(parseInt(videoPlayer.current?.getDuration()))\r\n            : \"0:00\"}\r\n        </label>\r\n      </div>\r\n      <div className={styles.volume}>\r\n        <i class=\"fa fa-volume-up\" aria-hidden=\"true\"></i>\r\n        <input\r\n          type=\"range\"\r\n          name=\"seeker\"\r\n          min={0}\r\n          max={0.999}\r\n          step=\"any\"\r\n          style={volumeStyle}\r\n          value={userInfo.volume}\r\n          onInput={(e) => {\r\n            setUserInfo({\r\n              ...userInfo,\r\n              volume: e.target.value,\r\n            });\r\n            setVolumeLength(e.target.value);\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Player;\r\n","import React, { useContext } from \"react\";\r\nimport styles from \"./Song.module.scss\";\r\nimport { SongQueueContext } from \"../../../App\";\r\nimport { Draggable } from \"react-beautiful-dnd\";\r\nimport { db } from \"../../../firebase/firebase\";\r\n\r\nconst Song = (props) => {\r\n  const {\r\n    songQueue,\r\n    setSongQueue,\r\n    currentSongStatus,\r\n    setCurrentSongStatus,\r\n    userInfo,\r\n  } = useContext(SongQueueContext);\r\n\r\n  const deleteSong = () => {\r\n    const songs = Array.from(songQueue);\r\n    songs.splice(props.index, 1);\r\n\r\n    if (props.index === songQueue.length - 1) {\r\n      setCurrentSongStatus({ ...currentSongStatus, index: props.index - 1 });\r\n      db.ref(\"rooms/\" + userInfo.roomId + \"/songQueue\").set(songs);\r\n      db.ref(\"rooms/\" + userInfo.roomId + \"/currentSongStatus/index\").set(\r\n        props.index - 1\r\n      );\r\n    } else if (songQueue.length === 0)\r\n      setCurrentSongStatus({ ...currentSongStatus, index: 0 });\r\n    db.ref(\"rooms/\" + userInfo.roomId + \"/songQueue\").set(songs);\r\n    db.ref(\"rooms/\" + userInfo.roomId + \"/currentSongStatus/index\").set(0);\r\n    setSongQueue(songs);\r\n  };\r\n\r\n  const playSong = () => {\r\n    setCurrentSongStatus({\r\n      ...currentSongStatus,\r\n      index: props.index,\r\n      isPlaying: true,\r\n    });\r\n\r\n    if (userInfo.isInRoom)\r\n      db.ref(\"rooms/\" + userInfo.roomId + \"/currentSongStatus\").set({\r\n        ...currentSongStatus,\r\n        index: props.index,\r\n        isPlaying: true,\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Draggable draggableId={props.video.title} index={props.index}>\r\n      {(provided) => (\r\n        <div\r\n          className={styles.song}\r\n          ref={provided.innerRef}\r\n          {...provided.draggableProps}\r\n          {...provided.dragHandleProps}\r\n        >\r\n          <i class=\"fas fa-play\" onClick={playSong}></i>\r\n          <div className={styles.content}>\r\n            <p>{props.video.title}</p>\r\n            <p>{props.video.artist}</p>\r\n          </div>\r\n          <p>{props.video.duration}</p>\r\n          <i class=\"fas fa-trash-alt\" onClick={deleteSong}></i>\r\n          <i class=\"fa fa-bars\" aria-hidden=\"true\"></i>\r\n        </div>\r\n      )}\r\n    </Draggable>\r\n  );\r\n};\r\n\r\nexport default Song;\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport styles from \"./Modal.module.scss\";\r\nimport { db } from \"../../firebase/firebase\";\r\nimport { SongQueueContext } from \"../../App\";\r\nimport toast from \"react-hot-toast\";\r\n\r\nconst Modal = (props) => {\r\n  const {\r\n    songQueue,\r\n    setSongQueue,\r\n    currentSongStatus,\r\n    setCurrentSongStatus,\r\n    userInfo,\r\n    setUserInfo,\r\n  } = useContext(SongQueueContext);\r\n  const [roomId, setRoomId] = useState(\"\");\r\n  const [users, setUsers] = useState([]);\r\n  const [name, setName] = useState(\"\");\r\n  const [invalidRoom, setInvalidRoom] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (userInfo.isInRoom) {\r\n      db.ref(\"rooms/\" + userInfo.roomId + \"/users\").on(\"value\", (snap) => {\r\n        setUsers(Object.values(snap.val()));\r\n      });\r\n    }\r\n  }, [userInfo.isInRoom, userInfo.roomId]);\r\n\r\n  const generateId = () => {\r\n    return (Math.random() + 1).toString(36).substring(7);\r\n  };\r\n\r\n  const addListeners = (id) => {\r\n    //Song queue listener\r\n    db.ref(\"rooms/\" + id + \"/songQueue\").on(\"value\", (snap) => {\r\n      if (snap.val()) {\r\n        setSongQueue(snap.val());\r\n      } else {\r\n        setSongQueue([]);\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    let tempUserId = generateId();\r\n\r\n    if (roomId !== \"\") {\r\n      //Join room\r\n\r\n      db.ref(\"rooms/\" + roomId).once(\"value\", (snap) => {\r\n        if (snap.exists()) {\r\n          setUserInfo({\r\n            name: name,\r\n            userId: tempUserId,\r\n            isInRoom: true,\r\n            roomId: roomId,\r\n          });\r\n          db.ref(\"rooms/\" + roomId + \"/users\").set({\r\n            ...snap.val().users,\r\n            [tempUserId]: name,\r\n          });\r\n\r\n          db.ref(\"rooms/\" + roomId + \"/users\").once(\"value\", (snap) => {\r\n            setUsers(Object.values(snap.val()));\r\n          });\r\n\r\n          db.ref(\"rooms/\" + roomId + \"/users\").on(\"child_added\", (snap) => {\r\n            toast(snap.val() + \" joined the room\");\r\n          });\r\n\r\n          db.ref(\"rooms/\" + roomId + \"/users\").on(\"child_removed\", (snap) => {\r\n            toast(snap.val() + \" left the room\");\r\n          });\r\n\r\n          if (snap.child(\"songQueue\").exists())\r\n            setSongQueue(snap.val().songQueue);\r\n          setCurrentSongStatus(snap.val().currentSongStatus);\r\n\r\n          //Set duration to 0 to get everyone in sync when someone joins\r\n          db.ref(\"rooms/\" + roomId + \"/currentSongStatus/isPlaying\").set(false);\r\n          db.ref(\"rooms/\" + roomId + \"/seekTo\").set(0.001);\r\n        } else setInvalidRoom(true);\r\n      });\r\n\r\n      addListeners(roomId);\r\n    } else {\r\n      //create room\r\n      let tempRoomId = generateId();\r\n\r\n      setUserInfo({\r\n        name: name,\r\n        userId: tempUserId,\r\n        isInRoom: true,\r\n        roomId: tempRoomId,\r\n      });\r\n\r\n      db.ref(\"rooms/\" + tempRoomId).set({\r\n        users: {\r\n          [tempUserId]: name,\r\n        },\r\n        seekTo: 0,\r\n        songQueue: songQueue,\r\n        currentSongStatus: currentSongStatus,\r\n      });\r\n\r\n      db.ref(\"rooms/\" + tempRoomId + \"/users\").once(\"value\", (snap) => {\r\n        setUsers(Object.values(snap.val()));\r\n      });\r\n\r\n      db.ref(\"rooms/\" + tempRoomId + \"/users\").on(\"child_added\", (snap) => {\r\n        toast(snap.val() + \" joined the room\");\r\n      });\r\n\r\n      db.ref(\"rooms/\" + tempRoomId + \"/users\").on(\"child_removed\", (snap) => {\r\n        toast(snap.val() + \" left the room\");\r\n      });\r\n\r\n      addListeners(tempRoomId);\r\n      setRoomId(tempRoomId);\r\n    }\r\n  };\r\n\r\n  //Update db when user disconnects\r\n  useEffect(() => {\r\n    if (userInfo.isInRoom === true) {\r\n      db.ref(\"rooms/\" + userInfo.roomId + \"/users/\" + userInfo.userId)\r\n        .onDisconnect()\r\n        .remove();\r\n    }\r\n  }, [userInfo]);\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.overlay} onClick={() => props.handler()}></div>\r\n      <div className={styles.modal}>\r\n        <div className={styles.header}>\r\n          <h1>Listen with others</h1>\r\n          <i\r\n            class=\"fa fa-times\"\r\n            aria-hidden=\"true\"\r\n            onClick={() => props.handler()}\r\n          ></i>\r\n        </div>\r\n\r\n        {!userInfo.isInRoom ? (\r\n          <>\r\n            <div className={styles.field}>\r\n              <label htmlFor=\"name\">\r\n                <i className=\"fa fa-user\" aria-hidden=\"true\"></i>\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"name\"\r\n                autoComplete=\"off\"\r\n                placeholder=\"Name\"\r\n                value={name}\r\n                onInput={(e) => setName(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className={styles.field}>\r\n              <label htmlFor=\"roomId\">\r\n                <i className=\"fas fa-id-card-alt\"></i>\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"roomId\"\r\n                autoComplete=\"off\"\r\n                placeholder=\"Room ID\"\r\n                value={roomId}\r\n                onInput={(e) => setRoomId(e.target.value)}\r\n              />\r\n            </div>\r\n            <button\r\n              className={styles.submit}\r\n              onClick={handleSubmit}\r\n              disabled={name === \"\"}\r\n            >\r\n              {roomId ? \"Join\" : \"Create\"} room\r\n            </button>\r\n            {invalidRoom ? (\r\n              <p className={styles.invalid}>Invalid room id</p>\r\n            ) : (\r\n              <p>*Leave room Id blank to create room</p>\r\n            )}\r\n          </>\r\n        ) : (\r\n          <div className={styles.roomInfo}>\r\n            <div\r\n              className={styles.roomId}\r\n              onClick={(e) => {\r\n                navigator.clipboard.writeText(userInfo.roomId);\r\n                toast(\"Copied to clipboard\");\r\n              }}\r\n            >\r\n              <h1>Room : {userInfo.roomId}</h1>\r\n              <i class=\"far fa-clone\"></i>\r\n            </div>\r\n\r\n            <h2>Users</h2>\r\n            <div className={styles.users}>\r\n              {users.map((user) => {\r\n                return <p className={styles.user}>{user}</p>;\r\n              })}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import React, { useState, useContext } from \"react\";\r\nimport styles from \"./Queue.module.scss\";\r\nimport Song from \"./Song/Song\";\r\nimport Modal from \"../modal/Modal\";\r\n\r\nimport { SongQueueContext } from \"../../App\";\r\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\r\nimport { db } from \"../../firebase/firebase\";\r\n\r\nconst Queue = () => {\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const [queueName, setQueueName] = useState(\"Queue\");\r\n  const {\r\n    songQueue,\r\n    setSongQueue,\r\n    currentSongStatus,\r\n    setCurrentSongStatus,\r\n    userInfo,\r\n  } = useContext(SongQueueContext);\r\n\r\n  const onDragEnd = (result) => {\r\n    const songs = Array.from(songQueue);\r\n    const [reorderdItem] = songs.splice(result.source.index, 1);\r\n    songs.splice(result.destination.index, 0, reorderdItem);\r\n\r\n    setSongQueue(songs);\r\n\r\n    db.ref(\"rooms/\" + userInfo.roomId + \"/songQueue\").set(songs);\r\n  };\r\n\r\n  const play = () => {\r\n    setCurrentSongStatus({ ...currentSongStatus, index: 0, isPlaying: true });\r\n\r\n    db.ref(\"rooms/\" + userInfo.roomId + \"/currentSongStatus\").set({\r\n      ...currentSongStatus,\r\n      index: 0,\r\n      isPlaying: true,\r\n    });\r\n  };\r\n\r\n  const shuffleSong = () => {\r\n    let tempArray = songQueue;\r\n\r\n    tempArray.sort(() => Math.random() - 0.5);\r\n    setCurrentSongStatus({ ...currentSongStatus, isPlaying: false });\r\n    setSongQueue(tempArray);\r\n    setCurrentSongStatus({ ...currentSongStatus, isPlaying: true });\r\n\r\n    db.ref(\"rooms/\" + userInfo.roomId + \"/songQueue\").set(tempArray);\r\n    db.ref(\"rooms/\" + userInfo.roomId + \"/currentSongStatus/isPlaying\").set(\r\n      true\r\n    );\r\n  };\r\n\r\n  const modalHandler = () => {\r\n    setModalOpen(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {modalOpen ? <Modal modalOpen={modalOpen} handler={modalHandler} /> : \"\"}\r\n      <DragDropContext onDragEnd={onDragEnd}>\r\n        <div className={styles.queue}>\r\n          <input\r\n            type=\"text\"\r\n            value={queueName}\r\n            onInput={(e) => setQueueName(e.target.value)}\r\n          />\r\n          <div className={styles.buttons}>\r\n            <button className={styles.play} onClick={play}>\r\n              <i class=\"fa fa-play\" aria-hidden=\"true\"></i>\r\n            </button>\r\n            <button onClick={shuffleSong}>\r\n              <i class=\"fa fa-random\" aria-hidden=\"true\"></i>\r\n            </button>\r\n            <button onClick={() => setModalOpen(true)}>\r\n              <i class=\"fas fa-users\"></i>\r\n            </button>\r\n          </div>\r\n          <Droppable droppableId=\"queue\">\r\n            {(provided) => (\r\n              <div\r\n                className={styles.songs}\r\n                ref={provided.innerRef}\r\n                {...provided.droppableProps}\r\n              >\r\n                {songQueue.length > 0 ? (\r\n                  songQueue.map((song, index) => {\r\n                    return (\r\n                      <Song video={song} key={song.videoId} index={index} />\r\n                    );\r\n                  })\r\n                ) : (\r\n                  <h1 className={styles.tut}>(Use search bar to add songs)</h1>\r\n                )}\r\n                {provided.placeholder}\r\n              </div>\r\n            )}\r\n          </Droppable>\r\n        </div>\r\n      </DragDropContext>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Queue;\r\n","import React, { useContext } from \"react\";\r\nimport styles from \"./SearchResults.module.scss\";\r\nimport { SongQueueContext } from \"../../../App\";\r\nimport { db } from \"../../../firebase/firebase\";\r\nimport axios from \"axios\";\r\n\r\nconst SearchResults = (props) => {\r\n  const { songQueue, setSongQueue, userInfo } = useContext(SongQueueContext);\r\n\r\n  //Gets video duration and add them to queue\r\n  const getVideoDuration = () => {\r\n    axios\r\n      .get(\r\n        `https://www.googleapis.com/youtube/v3/videos?part=contentDetails&id=${props.video.videoId}&key=AIzaSyCd9R94NO8BnSE5xx0kqKAp_Br_OVo6RI4`\r\n      )\r\n      .then((res) => {\r\n        let videoDuration = res.data.items[0].contentDetails.duration;\r\n        let videoDurationMatch = videoDuration.match(/\\d[HMS]+/g);\r\n        let artist = props.video.artist;\r\n\r\n        if (artist.includes(\"- Topic\")) {\r\n          artist = artist.replace(\"- Topic\", \"\");\r\n        }\r\n\r\n        let hours = 0;\r\n        let hasHours = false;\r\n        let minutes = 0;\r\n        let seconds = 0;\r\n        let isInQueue = false;\r\n\r\n        videoDurationMatch.forEach((element) => {\r\n          if (element.includes(\"H\")) {\r\n            hasHours = true;\r\n            hours = element.substr(0, element.indexOf(\"H\"));\r\n          }\r\n          if (element.includes(\"M\"))\r\n            minutes = element.substr(0, element.indexOf(\"M\"));\r\n          if (element.includes(\"S\"))\r\n            seconds = element.substr(0, element.indexOf(\"S\"));\r\n        });\r\n\r\n        if (hours < 10 && hasHours === true) {\r\n          hours = \"0\" + hours;\r\n        }\r\n        if (minutes < 10 && hasHours === true) {\r\n          minutes = \"0\" + minutes;\r\n        }\r\n        if (seconds < 10) {\r\n          seconds = \"0\" + seconds;\r\n        }\r\n\r\n        videoDuration = `${\r\n          hasHours\r\n            ? hours + \":\" + minutes + \":\" + seconds\r\n            : minutes + \":\" + seconds\r\n        }`;\r\n\r\n        const song = {\r\n          title: props.video.title,\r\n          artist: artist,\r\n          videoId: props.video.videoId,\r\n          thumbnail: props.video.thumbnail,\r\n          duration: videoDuration,\r\n        };\r\n\r\n        //Check if song is in queue\r\n        songQueue.forEach((element) => {\r\n          if (element.title === song.title) {\r\n            isInQueue = true;\r\n          }\r\n        });\r\n\r\n        if (isInQueue === false) {\r\n          setSongQueue([...songQueue, song]);\r\n          if (userInfo.isInRoom) {\r\n            db.ref(\"rooms/\" + userInfo.roomId + \"/songQueue\").set([\r\n              ...songQueue,\r\n              song,\r\n            ]);\r\n          }\r\n        }\r\n      })\r\n      .catch((e) => console.log(e));\r\n  };\r\n\r\n  return (\r\n    <div className={styles.searchResults} onClick={getVideoDuration}>\r\n      <div className={styles.container}>\r\n        <p>{props.video.title}</p>\r\n        <p>{props.video.artist}</p>\r\n      </div>\r\n      <img src={props.video.thumbnail.url} alt=\"thumbnail\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchResults;\r\n","import React from \"react\";\r\nimport styles from \"./Navbar.module.scss\";\r\nimport { useState, useEffect } from \"react\";\r\nimport SearchResults from \"../Landing/SearchResults/SearchResults\";\r\nimport axios from \"axios\";\r\n\r\nexport const Navbar = () => {\r\n  const API_KEY = process.env.REACT_APP_API_KEY;\r\n\r\n  const [focus, setFocus] = useState(false);\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const [hasWords, setHasWords] = useState(false);\r\n  const [searchResults, setSearchResults] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (inputValue) {\r\n      setHasWords(true);\r\n    } else {\r\n      setHasWords(false);\r\n      setSearchResults([]);\r\n    }\r\n  }, [inputValue]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    setSearchResults([]);\r\n    axios\r\n      .get(\r\n        `https://www.googleapis.com/youtube/v3/search?part=snippet&type=video&maxResults=5&videoCategoryId=10&q=${inputValue}&key=${API_KEY}`\r\n      )\r\n      .then((res) => {\r\n        setSearchResults(\r\n          res.data.items.map((video) => {\r\n            return {\r\n              title: video.snippet.title,\r\n              artist: video.snippet.channelTitle,\r\n              videoId: video.id.videoId,\r\n              thumbnail: video.snippet.thumbnails.default,\r\n            };\r\n          })\r\n        );\r\n      })\r\n      .catch((e) => console.log(e));\r\n  };\r\n\r\n  return (\r\n    <div className={styles.navbar}>\r\n      {searchResults.length !== 0 ? <div className={styles.overlay}></div> : \"\"}\r\n\r\n      <div className={styles.container}>\r\n        <div className={`${styles.search} ${focus ? styles.focus : \"\"}`}>\r\n          <i className=\"fas fa-search\"></i>\r\n          <form onSubmit={(e) => handleSubmit(e)} className={styles.form}>\r\n            <input\r\n              autoComplete=\"off\"\r\n              value={inputValue}\r\n              type=\"text\"\r\n              id=\"search\"\r\n              placeholder=\"Search\"\r\n              onFocus={() => setFocus(true)}\r\n              onBlur={() => {\r\n                setFocus(false);\r\n              }}\r\n              onInput={(e) => setInputValue(e.target.value)}\r\n            />\r\n          </form>\r\n\r\n          {hasWords ? (\r\n            <i\r\n              className=\"fas fa-times cancel\"\r\n              onClick={() => setInputValue(\"\")}\r\n            ></i>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          {searchResults.length !== 0 ? (\r\n            <div className={styles.searchResults}>\r\n              {searchResults.map((video) => {\r\n                return <SearchResults video={video} key={video.videoId} />;\r\n              })}\r\n            </div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, createContext, useRef, useEffect } from \"react\";\nimport styles from \"./App.module.scss\";\nimport \"./App.css\";\n\nimport Player from \"./components/Player/Player\";\nimport Queue from \"./components/Queue/Queue\";\n\nimport ReactPlayer from \"react-player/youtube\";\nimport solenolyrics from \"solenolyrics\";\nimport { Toaster } from \"react-hot-toast\";\nimport { Navbar } from \"./components/Navbar/Navbar\";\n\nexport const SongQueueContext = createContext(null);\n\nfunction App() {\n  const videoPlayer = useRef();\n\n  const [userInfo, setUserInfo] = useState({\n    name: \"\",\n    userId: 0,\n    isInRoom: false,\n    volume: 0,\n    roomId: 0,\n  });\n\n  const [songQueue, setSongQueue] = useState([]);\n  const [lyrics, setLyrics] = useState(\"\");\n  const [currentSongStatus, setCurrentSongStatus] = useState({\n    index: 0,\n    isPlaying: false,\n    queueStatus: \"noRepeat\",\n  });\n\n  async function getLyrics(withArtist) {\n    try {\n      if (videoPlayer !== undefined) {\n        let lyrics = \"\";\n        if (withArtist) {\n          lyrics = await solenolyrics.requestLyricsFor(\n            songQueue[currentSongStatus.index]?.title +\n              songQueue[currentSongStatus.index]?.artist\n          );\n        } else {\n          lyrics = await solenolyrics.requestLyricsFor(\n            songQueue[currentSongStatus.index]?.title\n          );\n        }\n\n        //Request for lyrics again if failed the first time\n        if (lyrics === undefined) {\n          lyrics = await solenolyrics.requestLyricsFor(\n            songQueue[currentSongStatus.index]?.title\n          );\n        }\n\n        setLyrics(lyrics);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  useEffect(() => {\n    if (songQueue.length > 0) getLyrics(false);\n  }, [songQueue[currentSongStatus.index]?.title, songQueue.length]);\n\n  return (\n    <SongQueueContext.Provider\n      value={{\n        songQueue,\n        setSongQueue,\n        currentSongStatus,\n        setCurrentSongStatus,\n        userInfo,\n        setUserInfo,\n        videoPlayer,\n      }}\n    >\n      <Toaster\n        position=\"top-right\"\n        toastOptions={{\n          style: {\n            border: \"2px solid #F6C90E\",\n            background: \"#303841\",\n            color: \"#EEEEEE\",\n            fontFamily: \"Lato, sans-serif\",\n          },\n        }}\n      />\n      <div className={styles.app}>\n        <Navbar />\n        <section className={styles.main}>\n          <div className={styles.lyrics}>\n            {songQueue.length !== 0 ? (\n              <ReactPlayer\n                url={`https://www.youtube-nocookie.com/watch?v=${\n                  songQueue[currentSongStatus.index]?.videoId\n                }`}\n                volume={userInfo.volume}\n                className={styles.player}\n                ref={videoPlayer}\n                playing={currentSongStatus.isPlaying}\n                loop={currentSongStatus.queueStatus === \"loop\" ? true : false}\n                onEnded={() => {\n                  switch (currentSongStatus.queueStatus) {\n                    case \"noRepeat\":\n                      if (currentSongStatus.index + 1 === songQueue.length) {\n                        console.log(\"no more songs\");\n                      } else {\n                        setCurrentSongStatus({\n                          ...currentSongStatus,\n                          index: currentSongStatus.index + 1,\n                        });\n                      }\n                      break;\n                    case \"repeat\":\n                      if (currentSongStatus.index + 1 === songQueue.length) {\n                        setCurrentSongStatus({\n                          ...currentSongStatus,\n                          index: 0,\n                        });\n                      } else {\n                        setCurrentSongStatus({\n                          ...currentSongStatus,\n                          index: currentSongStatus.index + 1,\n                        });\n                      }\n                      break;\n                    default:\n                      break;\n                  }\n                }}\n              />\n            ) : (\n              \"\"\n            )}\n            <h1>Lyrics</h1>\n            <p className={styles.lyric}>{lyrics}</p>\n            <button\n              onClick={() => getLyrics(true)}\n              className={styles.wrongLyrics}\n            >\n              Wrong lyrics?\n            </button>\n            <p className={styles.desc}>(Use this if lyrics are wrong)</p>\n          </div>\n          <div className={styles.queue}>\n            <Queue />\n          </div>\n          <Player />\n        </section>\n      </div>\n    </SongQueueContext.Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}